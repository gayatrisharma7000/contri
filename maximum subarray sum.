*#include<bits/stdc++.h>
using namespace std;

int main(){

	int n , array[1000] , array1[1000] , max = 1;

	cin>>n;

	for(int i=0; i<n; i++){
		cin>>array[i];
	}

	array[n]={0};

	int sum = array[0];

for(int i=0; i<n; i++){

	if(array[i+1]>array[i]+array[i+1]){
		sum = array[i+1]
	}

	else sum = sum + array[i+1];

}

























// this is n2 solution. 
/*#include<bits/stdc++.h>
using namespace std;

int main(){

	int n , array[1000] , max = 1;

	cin>>n;

	for(int i=0; i<n; i++){
		cin>>array[i];
	}

	for(int y=0; y<n; y++){

		for(int i=0; i<n; i++){
			int x=0;
			for(int j=y; j<n-i; j++){
				cout<<array[j];
				x = x + array[j];
			}

			cout<<endl;

			if(x>max) max = x;

		}
			cout<<endl;
	}

	cout<<max;


}






/*#include<bits/stdc++.h>
using namespace std;
                                                                        
int main(){                                 

	int n , array[1000] , max = 1;
                                                                                         // this code finds the maximum subarray and also prints all the possible subarrays.
	cin>>n;

	for(int i=0; i<n; i++){
		cin>>array[i];
	}

	for(int y=0; y<n; y++){

		for(int i=0; i<n; i++){
			int x=0;
			for(int j=y; j<n-i; j++){
				cout<<array[j]<<" ";
				x = x + array[j];
			}
			cout<<endl;

			if(x>max) max = x;
		}

			cout<<endl;

	}

	cout<<max;

} */










/*#include<bits/stdc++.h>
using namespace std;

int main(){

	int n , array[1000] , array1[1000] , max = 1;

	cin>>n;

	for(int i=0; i<n; i++){
		cin>>array[i];
	}

	for(int i=0; i<n; i++){
		int x=0;
		for(int j=0; j<n-i; j++){
			cout<<array[j];
			x = x + array[j];
		}
		cout<<endl;

		if(x>max) max = x;
	}

	cout<<max;

} */
